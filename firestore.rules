rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function hasRoles(auth, allowed_roles){
        return auth.token.roles in allowed_roles ;
    }
    
    
  	match /orders/{orderId} {
    	
    	allow read : if request.auth.uid == resource.data.user &&
      								hasRoles(request.auth, ["hosteler", "student"]) ||
      								hasRoles(request.auth, ["admin"]);
      
      //allow write : if reviewFields(request.resource,request.auth);
    }
    
    
    
    match /items/{itemId} {
    
      function reviewFields(docData) {
       return docData.name is string &&
            docData.price is int &&
            docData.isVeg is bool &&
            docData.available is bool
    	}
    
  
    	allow read: if request.auth != null;
      allow write: if true;
      
      //hasRoles(request.auth, ["admin"]) &&
      	//							reviewFields(request.resource.data);
    }

		match /category/{categoryId} {
  		
      allow read: if request.auth != null;
      allow write: if request.auth != null;
  	}
  }
  
}